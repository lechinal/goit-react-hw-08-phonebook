{"version":3,"file":"static/js/878.58c23b9c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/Paper/Paper.module.css?e934","components/Paper/Paper.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"inputContact\":\"ContactForm_inputContact__ylxPW\",\"AddContactBtn\":\"ContactForm_AddContactBtn__+yO9R\"};","// extracted by mini-css-extract-plugin\nexport default {\"paper\":\"Paper_paper__iT3bM\"};","import React from 'react';\nimport styles from './Paper.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Paper({ children }) {\n  return <div className={styles.paper}>{children}</div>;\n}\n\nPaper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport Paper from '../Paper/Paper.jsx';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Paper>\n      <form className={styles.form} onSubmit={handleFormSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.inputContact}\n            type=\"text\"\n            name=\"name\"\n            required\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChangeName}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.inputContact}\n            type=\"tel\"\n            name=\"number\"\n            required\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChangeNumber}\n          />\n        </label>\n        <button className={styles.AddContactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ handleDeleteContact }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={handleDeleteContact}\n      className={styles.button}\n    >\n      Delete\n    </button>\n  );\n};\nButton.propTypes = {\n  handleDeleteContact: PropTypes.func,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemList\":\"ContactList_itemList__G1Dmj\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nimport Paper from '../Paper/Paper';\nimport Button from '../Button/Button';\nimport styles from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <Paper>\n      <ul className={styles.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={styles.itemList}>\n            {contact.name}: {contact.number}\n            <Button onClick={() => handleDelete(contact.id)}></Button>\n          </li>\n        ))}\n      </ul>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nimport Paper from '../Paper/Paper';\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Paper>\n      <div className={styles.filterContainer}>\n        <label className={styles.filterLabel}>Find contacts by name: </label>\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact name\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </div>\n    </Paper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"wrapper\">\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </div>\n  );\n}\n"],"names":["Paper","children","className","styles","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","currentTarget","findIndex","contact","alert","addContact","reset","type","required","placeholder","value","onChange","target","handleDeleteContact","onClick","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}